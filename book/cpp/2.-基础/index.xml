<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2.基础 on 清水的小站</title>
    <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/</link>
    <description>Recent content in 2.基础 on 清水的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Aug 2019 15:13:01 +0800</lastBuildDate>
    
	<atom:link href="https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2.1 c&#43;&#43;变量</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.1-c&#43;&#43;%E5%8F%98%E9%87%8F/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.1-c&#43;&#43;%E5%8F%98%E9%87%8F/</guid>
      <description>变量 标识（Identifiers） 有效标识由 字母(letter)， 数字(digits)和 下划线 ( _ )组成。 标识的长度没有限制，但是有些编译器</description>
    </item>
    
    <item>
      <title>2.2 数据类型</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.2-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.2-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</guid>
      <description>数据类型 名称 字节数 描述 范围 Char 1 字符（character）或整数（integer ）， 8位（bits）长 有符号（signed）: -128 到 127无符号</description>
    </item>
    
    <item>
      <title>2.3 转义字符</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.3-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.3-%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6/</guid>
      <description>转义字符 符号 描述 ASCII码值（十进制） \n 换行(LF) ，将当前位置移到下一行开头 010 \r 回车(CR) ，将当前位置移到本行开头 013 \t 水平制表(HT)</description>
    </item>
    
    <item>
      <title>2.4 运算符</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.4-%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.4-%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>运算符 优先级 运算符 名称或含义 使用形式 结合方向 说明 1 [] 数组下标 数组名[常量表达式] 左到右 () 圆括号 （表达式）/函数名( 形参表) . 成员选择（对象）</description>
    </item>
    
    <item>
      <title>2.5 控制结构</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.5-%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.5-%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84/</guid>
      <description>控制结构 1.if if(true){ }else if(true){ }else{ } 2.switch int switch_on = 1; switch(switch_on){ case 1: printf(&amp;#34;this case is 1\n&amp;#34;); break; default: break; } 3.for for(int i=0; i&amp;lt;=100; i++&amp;gt;){ printf(&amp;#34;i:%d!\n&amp;#34;, i); } int i; for(i=0; i&amp;lt;=0; i-=10000){ printf(&amp;#34;i:%d!\n&amp;#34;, i); } return 0; 4.while int m = 0; while(m &amp;lt;100&amp;gt;){ m++; } #include &amp;lt;iostream.h&amp;gt; int main () { int n; cout &amp;lt;&amp;lt; &amp;#34;Enter the starting number &amp;gt; &amp;#34;; cin</description>
    </item>
    
    <item>
      <title>2.6 Class</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.6-class/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.6-class/</guid>
      <description>Class 构造函数 构造函数的参数初始化表 析构函数 this指针详解 静态成员变量和静态成员函数 一般情况下，如果有N个同类的对象，那么每一个对象都分别有自</description>
    </item>
    
    <item>
      <title>2.7 关键字</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.7-%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.7-%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>关键字 const 在类中，如果你不希望某些数据被修改，可以借助 const 关键字加以限定。const 可以用来修饰成员变量、成员函数、对象以及对象的引用。 virtual 虚基类</description>
    </item>
    
    <item>
      <title>2.10 预处理指令</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.10-%E9%A2%84%E5%A4%84%E7%90%86%E6%8C%87%E4%BB%A4/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.10-%E9%A2%84%E5%A4%84%E7%90%86%E6%8C%87%E4%BB%A4/</guid>
      <description>预处理指令 指令 说明 # 空指令，无任何效果 #include 包含一个源代码文件 #define 定义宏 #undef 取消已定义的宏 #if 如果给定条件为真，则编译下面代码 #ifdef 如果宏已经定义，则编译</description>
    </item>
    
    <item>
      <title>2.11 指针</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.11-%E6%8C%87%E9%92%88/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.11-%E6%8C%87%E9%92%88/</guid>
      <description>指针 定义 含义 int i; 定义整型变量 i。 int *p; p为指向整型数据的指针变量。 int a[n]; 定义整型数组a，它有n个元素。 int *p[n]; 定义指针数组p，它由n个指向整型数据的</description>
    </item>
    
    <item>
      <title>2.12 结构体、共用体和位运算</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.12-%E7%BB%93%E6%9E%84%E4%BD%93%E5%85%B1%E7%94%A8%E4%BD%93%E5%92%8C%E4%BD%8D%E8%BF%90%E7%AE%97/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.12-%E7%BB%93%E6%9E%84%E4%BD%93%E5%85%B1%E7%94%A8%E4%BD%93%E5%92%8C%E4%BD%8D%E8%BF%90%E7%AE%97/</guid>
      <description>结构体（Struct） struct stu{ char *name; //姓名 int num; //学号 char sex; //性别 float score; //成绩 }; struct stu s1 s1.name = &amp;#34;aa&amp;#34; s1.num=123 // 结构体数组 struct stu{ char *name; int num; char sex; float score; }class[5] = { {&amp;#34;Li ping&amp;#34;, 5, &amp;#39;M&amp;#39;, 45}, {&amp;#34;Zhang</description>
    </item>
    
    <item>
      <title>2.8 函数模板</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.8-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.8-%E5%87%BD%E6%95%B0%E6%A8%A1%E6%9D%BF/</guid>
      <description>template&amp;lt;typename T&amp;gt; T max(T a, T b, T c) { if (a &amp;gt; b) a = b; if (a &amp;gt; c) a = c; return a; } int main() { cout &amp;lt;&amp;lt; max(10, 11, 12) &amp;lt;&amp;lt; endl; return 0; } 模板类 #include &amp;lt;iostream&amp;gt; using namespace std; template&amp;lt;typename M, typename N&amp;gt; class point { private: M x; N y; public: point() : x(0), y(0) {} point(M x, N y)</description>
    </item>
    
    <item>
      <title>2.9 数据结构</title>
      <link>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.9-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/cpp/2.-%E5%9F%BA%E7%A1%80/2.9-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>Array int a[10]={12, 19, 22 , 993, 344}; int a[10] = {0}; char c[10] = {0}; float f[10] = {0}; float level[2], sum; 定义一个两个参数的数组，并且参数只能是float型 C语言规定，数组名就代表了该数组的地址。 C语</description>
    </item>
    
  </channel>
</rss>