<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 清水的小站</title>
    <link>https://python.01cs.cc/</link>
    <description>Recent content in Python on 清水的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Aug 2019 10:56:29 +0800</lastBuildDate>
    
	<atom:link href="https://python.01cs.cc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>python</title>
      <link>https://python.01cs.cc/1.-%E5%AD%A6%E4%B9%A0/python/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://python.01cs.cc/1.-%E5%AD%A6%E4%B9%A0/python/</guid>
      <description>python环境 问题 获取python2.x版本pip curl &amp;lt;https://bootstrap.pypa.io/get-pip.py&amp;gt; -o get-pip.py python2 get-pip.py psycopg2包安装错误 yum install postgresql-devel pip2 install psycopg2 推送 #配置私有库 [distutils] index-servers = pypi nexus test [pypi] repository:https://pypi.python.org/pypi username:your_username password:your_password [nexus]</description>
    </item>
    
    <item>
      <title>python关键字</title>
      <link>https://python.01cs.cc/3.-%E5%BA%93%E5%87%BD%E6%95%B0/python%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://python.01cs.cc/3.-%E5%BA%93%E5%87%BD%E6%95%B0/python%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>python关键字 isinstance() 函数来判断一个对象是否是一个已知的类型，类似 type()。 type() 不会认为子类是一种父类类型，不考虑继承关系。 isinstance() 会认为子类是一</description>
    </item>
    
    <item>
      <title>运算符</title>
      <link>https://python.01cs.cc/2.-%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://python.01cs.cc/2.-%E5%9F%BA%E7%A1%80/%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>位运算</description>
    </item>
    
    <item>
      <title></title>
      <link>https://python.01cs.cc/6.-%E9%A1%B9%E7%9B%AE/sqlalchemy/query/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://python.01cs.cc/6.-%E9%A1%B9%E7%9B%AE/sqlalchemy/query/</guid>
      <description>查询 query = (session .query(User) .filter(User.username == &amp;ldquo;asd&amp;rdquo;) .filter_by(username=&amp;quot;asd&amp;rdquo;) #上面两个都是添加where .join(Addreess)#使用ForeignKey .join(Addreess,Add</description>
    </item>
    
  </channel>
</rss>