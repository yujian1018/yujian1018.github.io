<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>清水的小站</title>
    <link>https://yujian1018.github.io/book/pro/</link>
    <description>Recent content on 清水的小站</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 30 Aug 2019 15:13:01 +0800</lastBuildDate>
    
	<atom:link href="https://yujian1018.github.io/book/pro/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2.5 kbengine</title>
      <link>https://yujian1018.github.io/book/pro/2.5-kbengine/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.5-kbengine/</guid>
      <description>    http://www.kbengine.org/ C++ python           </description>
    </item>
    
    <item>
      <title>2.6 rebar</title>
      <link>https://yujian1018.github.io/book/pro/2.6-rebar/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.6-rebar/</guid>
      <description>https://github.com/basho/rebar/ 配置文件说明：https://github.com/basho/rebar/blob/master/rebar.config.sample</description>
    </item>
    
    <item>
      <title>2.7.1</title>
      <link>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.1/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.1/</guid>
      <description>显示图像文件详细信息 gm identify a.jpg 更改当前目录下*.jpg的尺寸大小，并保存于目录.thumb里面 gm mogrify -output-directory .thumbs -resize 320x200 *.jpg 将三幅图像和并为一副图像 gm montage -mode concatenate -tile 3x1</description>
    </item>
    
    <item>
      <title>2.7.2</title>
      <link>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.2/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.2/</guid>
      <description>GraphicsMagick缩放比例的精准控制 原始图片是input.jpg，尺寸：160x120只缩小不放大 gm convert input.jpg -resize &amp;ldquo;500x500&amp;gt;&amp;rdquo; output_1.jpg 加了&amp;gt;,表示只</description>
    </item>
    
    <item>
      <title>2.7.3</title>
      <link>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.3/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.3/</guid>
      <description>1.编译成动态库。 ./configure &amp;ndash;enable-shared make sudo make install 编写一个例子 gcc -o demo demo.c -O GraphicsMagick-config --cppflags --ldflags --libs 执行时出现：libGraphicsMagick++.so.12: cannot open shared object file: No such file</description>
    </item>
    
    <item>
      <title>2.7.4</title>
      <link>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.4/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.7-graphicsmagick/2.7.4/</guid>
      <description>terminate called after throwing an instance of &amp;lsquo;Magick::WarningCoder&amp;rsquo; what(): Magick: profile matches sRGB but writing iCCP instead (q1_80x80_100%.png) reported by coders/png.c:1076 (PNGWarningHandler) http://my.oschina.net/1pei/blog/479162#OSC_h1_1 libpng 1.6+更严格的检查会对original HP/MS sRGB profile报警。老的profile使用D50</description>
    </item>
    
    <item>
      <title>1</title>
      <link>https://yujian1018.github.io/book/pro/1.0.1/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/1.0.1/</guid>
      <description>![http://baike.baidu.com/view/453197.htm ]</description>
    </item>
    
    <item>
      <title>1</title>
      <link>https://yujian1018.github.io/book/pro/1.0.2/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/1.0.2/</guid>
      <description>gitAPI: https://developer.github.com/ 域名 https://example.org/api/ 版本 Accept: vnd.example-com.foo+json; version=1.0 路径（Endpoint） https://api.example.com/v1/zoos https://api.example.com/v1/animals https://api.example.com/v1/employees HTTP动词 GET（SELECT）：从服务器取出资源（一项或多项）。 POST（CREATE</description>
    </item>
    
    <item>
      <title>2</title>
      <link>https://yujian1018.github.io/book/pro/2.0.1/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.0.1/</guid>
      <description>1．问题领域——我们的架构是为解决什么类型的问题而设计的？软件架构 一定不是通用的，而是为解决某一类特定问题而设计的。缺少了关于用 来解决哪类问</description>
    </item>
    
    <item>
      <title>2</title>
      <link>https://yujian1018.github.io/book/pro/2.0.2/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.0.2/</guid>
      <description>速度 简单的设计 对非线性开发模式的强力支持（允许上千个并行开发的分支） 完全分布式 有能力高效管理类似 Linux 内核一样的超大规模项目（速度和数据量）</description>
    </item>
    
    <item>
      <title>cowboy</title>
      <link>https://yujian1018.github.io/book/pro/2.4-cowboy/cowboy/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.4-cowboy/cowboy/</guid>
      <description>Web服务器，basho出品 git地址:https://github.com/ninenines/cowboy Dispatch组合 静态文件 e</description>
    </item>
    
    <item>
      <title>Eventslist</title>
      <link>https://yujian1018.github.io/book/pro/2.3-ejabberd/eventslist/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.3-ejabberd/eventslist/</guid>
      <description>Here is the list of available events in ejabberd. The types of the corresponding hooks parameters is described below.
adhoc_local_items(Acc, From, To, Lang) -&amp;gt; Adhoc adhoc_sm_items(Acc, From, To, Lang) -&amp;gt; Adhoc anonymous_purge_hook(User, Server) -&amp;gt; ok c2s_auth_result(bool(), User, Server, IP) -&amp;gt; ok c2s_broadcast_recipients(Acc, Server, StateData, Type, From, Packet) -&amp;gt; [] c2s_filter_packet(Acc, Server, C2SState, Feature, To, Packet) -&amp;gt; bool() c2s_filter_packet_in(Acc, JID, From, To) -&amp;gt; FixedPacket c2s_loop_debug({route, From, To, Packet}) -&amp;gt; ok c2s_loop_debug(Text) -&amp;gt; ok c2s_loop_debug({xmlstreamelement, Packet}) -&amp;gt; ok c2s_post_auth_features(Acc, Server) -&amp;gt; [] c2s_presence_in(Acc, {From, To, Packet}) -&amp;gt; C2SState c2s_stream_features(Acc, Server) -&amp;gt; [] c2s_unauthenticated_iq(Acc, Server, IQ, IP) -&amp;gt; empty | Packet c2s_update_presence(Acc, User, Server) -&amp;gt; Packet caps_update(From, To, get_features(Server, Caps)) -&amp;gt; ok csi_filter_stanza(Acc, Stanza) -&amp;gt; send disco_info(Acc, Host, Module, Node, Lang) -&amp;gt; [] disco_local_features(Acc, From, To, Node, Lang) -&amp;gt; Disco disco_local_identity(Acc, From, To, Node, Lang) -&amp;gt; [] disco_local_items(Acc, From, To, Node, Lang) -&amp;gt; Disco disco_sm_features(Acc, From, To, Node, Lang) -&amp;gt; Disco disco_sm_identity(Acc, From, To, Node, Lang) -&amp;gt; [] disco_sm_items(Acc, From, To, Node, Lang) -&amp;gt; Disco filter_packet(Acc) -&amp;gt; OrigPacket forbidden_session_hook(JID) -&amp;gt; ok http_request_debug({LocalPath, Request}) -&amp;gt; ok local_send_to_resource_hook(From, To, Packet) -&amp;gt; ok muc_filter_message(Stanza, MUCState, RoomJID, FromJID, FromNick) -&amp;gt; Stanza drop muc_filter_presence(Stanza, MUCState, RoomJID, FromJID, FromNick) -&amp;gt; Stanza drop offline_message_hook(From, To, Packet) -&amp;gt; ok presence_probe_hook(From, To, Pid) -&amp;gt; ok privacy_check_packet(Acc, User, Server, PrivacyList, {From, To, Packet}, Dir) -&amp;gt; Auth privacy_get_user_list(Acc, User, Server) -&amp;gt; #userlist{} privacy_iq_get(Acc, From, To, IQ, PrivacyList) -&amp;gt; {result, Packet} | {error, Error} privacy_iq_set(Acc, From, To, IQ) -&amp;gt; {result, Packet} | {error, Error} privacy_updated_list(Acc, PrivacyList, PrivList) -&amp;gt; bool() pubsub_create_node(ServerHost, Host, Node, NodeId, NodeOptions) -&amp;gt; ok pubsub_delete_node(ServerHost, Host, Node, NodeId) -&amp;gt; ok pubsub_publish_item(ServerHost, Node, Publisher, service_jid(Host), ItemId, Payload) -&amp;gt; ok register_user(User, Server) -&amp;gt; ok remove_user(User, Server) -&amp;gt; ok reopen_log_hook() -&amp;gt; ok resend_offline_messages_hook(Acc, User, Server) -&amp;gt; [] resend_subscription_requests_hook(Acc, User, Server) -&amp;gt; [] roster_get(Acc, {User, Server}) -&amp;gt; [] roster_get_jid_info(Acc, User, Server, From) -&amp;gt; []} roster_get_subscription_lists(Acc, User, Server) -&amp;gt; []} roster_get_versioning_feature(Acc, Server) -&amp;gt; [] roster_groups(Acc, ServerHost) -&amp;gt; [] roster_in_subscription(Acc, User, Server, From, SubscriptionInType, Reason) -&amp;gt; bool() roster_out_subscription(User, Server, To, SubscriptionOutType) -&amp;gt; ok roster_process_item(Acc, Server) -&amp;gt; RosterItem s2s_allow_host(Acc, Host, Host) -&amp;gt; Auth s2s_connect_hook(Host, Server) -&amp;gt; ok s2s_loop_debug({xmlstreamelement, Packet}) -&amp;gt; ok s2s_receive_packet(From, To, Packet) -&amp;gt; ok s2s_send_packet(From, To, Packet) -&amp;gt; ok s2s_stream_features(Acc, Server) -&amp;gt; [] set_presence_hook(User, Server, Resource, Presence) -&amp;gt; ok sm_register_connection_hook(SID, JID, Info) -&amp;gt; ok sm_remove_connection_hook(SID, JID, Info) -&amp;gt; ok unset_presence_hook(User, Server, Resource, Status) -&amp;gt; ok user_available_hook(JID) -&amp;gt; ok user_ping_timeout(JID) -&amp;gt; ok user_receive_packet(Packet, C2SState, JID, From, To) -&amp;gt; Packet user_send_packet(Packet, C2SState, From, To) -&amp;gt; Packet vcard_set(User, Server, VCARD) -&amp;gt; ok webadmin_menu_host(Acc, Host, Lang) -&amp;gt; [] webadmin_menu_hostnode(Acc, Host, Node, Lang) -&amp;gt; [] webadmin_user(Acc, User, Server, Lang) -&amp;gt; [] webadmin_user_parse_query(Acc, Action, User, Server, Query) -&amp;gt; []</description>
    </item>
    
    <item>
      <title>hooksformoduledevelopers</title>
      <link>https://yujian1018.github.io/book/pro/2.3-ejabberd/hooksformoduledevelopers/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.3-ejabberd/hooksformoduledevelopers/</guid>
      <description>filter_packet (run_hook) ejabberd_hooks:run_fold(filter_packet, {OrigFrom, OrigTo, OrigPacket}, []).</description>
    </item>
    
    <item>
      <title>leofs</title>
      <link>https://yujian1018.github.io/book/pro/2.2-leofs/leofs/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.2-leofs/leofs/</guid>
      <description>LeoFS is a highly available, distributed, eventually consistent object/blob store. If you are searching a storage system that is able to store huge amount and various kind of files such as photo, movie, log data and so on, LeoFS is suitable for that. Leofs是一个高可靠性、分布式、最终一致性的对应存储</description>
    </item>
    
    <item>
      <title>leofsShell命令</title>
      <link>https://yujian1018.github.io/book/pro/2.2-leofs/leofsshell%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.2-leofs/leofsshell%E5%91%BD%E4%BB%A4/</guid>
      <description>Shell Description 一般命令 leofs-adm status [] • Retrieve status of every node (default)检索所有节点的状态 • Retrieve status of the specified node 检索特定节点的状态 leofs-adm whereis • Retrieve an assigned object by the file-path 检索指定的object</description>
    </item>
    
    <item>
      <title>leofsstorage_shell</title>
      <link>https://yujian1018.github.io/book/pro/2.2-leofs/leofsstorage_shell/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.2-leofs/leofsstorage_shell/</guid>
      <description>Shell Description 描述 leofs-adm detach • Remove the storage node from the LeoFS storage cluster 移除 • Current status: running | stop 可以使用 leofs-adm rollback storage_0@127.0.0.1 恢复（当node状态是detach时） leofs-adm suspend • Suspend a storage node for maintenance 挂起 • This command is NOT similar to the detach</description>
    </item>
    
    <item>
      <title>leofs安装</title>
      <link>https://yujian1018.github.io/book/pro/2.2-leofs/leofs%E5%AE%89%E8%A3%85/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.2-leofs/leofs%E5%AE%89%E8%A3%85/</guid>
      <description>1.download 源码 git clone https://github.com/leo-project/leofs.git 2.需要的依赖项：Erlang 3.打开项目的readme，按照其中安装方法安装 cd leofs/ make make release cp -r package {LEOFS_DEPLOYED_DIR} cd {LEOFS_DEPLOYED_DIR}/</description>
    </item>
    
    <item>
      <title>leofs端口占用</title>
      <link>https://yujian1018.github.io/book/pro/2.2-leofs/leofs%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.2-leofs/leofs%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</guid>
      <description>http://leo-project.net/leofs/docs/installation/install_4.html Firewall Rules In order for LeoFS to work correctly, it is necessary to set and check the firewall rules in your environment as follows: Subsystem Direction Ports Notes LeoFS Manager-Master Incoming 10010/* Manager console LeoFS Manager-Master Incoming 4369/* Erlang Port Mapper LeoFS Manager-Master Incoming 4020/* SNMP Listen Port LeoFS Manager-Master Outgoing */4369 Erlang Port Mapper LeoFS Manager-Slave Incoming 10011/* Manager console LeoFS Manager-Slave Incoming 4369/* Erlang Port Mapper LeoFS</description>
    </item>
    
    <item>
      <title>mod_echo</title>
      <link>https://yujian1018.github.io/book/pro/2.3-ejabberd/mod_echo.erl/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.3-ejabberd/mod_echo.erl/</guid>
      <description>Ejabberd扩展案例 源码：https://github.com/processone/ejabberd/blob/master/src/</description>
    </item>
    
    <item>
      <title>yaws</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yaws.conf/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yaws.conf/</guid>
      <description>http://yaws.hyber.org/yman.yaws?page=yaws.conf yaws默认上传文件大小为：2048 partial_post_size = nolimit 上传的文件无限大 post限制 partial_post_size = 2048 缓存机制 max_num_cached_files max_num_cached_bytes max_size_cached_file cache_refresh_secs max_connections list_dir errormod_crash = Module errormod_401 = Module errormod_404 = Module Module:out404(Arg, GC, SC) Arg - a #arg{} record GC - a #gconf{}</description>
    </item>
    
    <item>
      <title>Yaws_Session用法</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yaws_session%E7%94%A8%E6%B3%95/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yaws_session%E7%94%A8%E6%B3%95/</guid>
      <description>设置session时，需要运行 1. Url = &amp;ldquo;/&amp;quot;, [{&amp;ldquo;action&amp;rdquo;, Action}|Data] = yaws_api:parse_query( A ), case Action of &amp;ldquo;reg&amp;rdquo; -&amp;gt; [ {&amp;ldquo;userlogin&amp;rdquo;, UserName}, {&amp;ldquo;password&amp;rdquo;, _Pwd}, {&amp;ldquo;passwordtoo&amp;rdquo;, Pwd}, {&amp;ldquo;Email&amp;rdquo;, Email}, {&amp;ldquo;val&amp;rdquo;,_Val} ] = yaws_api:parse_post( A ), try myuser_mod_manager:reg_user( UserName, erlang:md5( Pwd ), Email ) of Name -&amp;gt; Cookie = yaws_api:new_cookie_session(Name), [ yaws_api:redirect(Url), yaws_api:setcookie(&amp;ldquo;haowenjiao&amp;rdquo;,Cookie) ] catch _:_Why -&amp;gt; mnesiaDBA_pub_function:log( _Why, &amp;ldquo;../doc/logs/myuser.access&amp;rdquo; ),</description>
    </item>
    
    <item>
      <title>yawsapi</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yawsapi/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yawsapi/</guid>
      <description>1.check_cookie( A ) -&amp;gt; H = A#arg.headers, case yaws_api:find_cookie_val( ?Cook, H#headers.cookie ) of Val when Val /= [] -&amp;gt; case yaws_api:cookieval_to_opaque( Val ) of {ok, Sess} -&amp;gt; {ok, Sess, Val}; { error, { has_session, Sess }} -&amp;gt; {ok, Sess}; Else -&amp;gt; Else end; [] -&amp;gt; {error, nocookie} end. 2.{ok, _Sess, Cookie} -&amp;gt; yaws_api:delete_cookie_session( Cookie ); 删除session 3.yaws_api:new_cookie_session( Sess ). 新建s</description>
    </item>
    
    <item>
      <title>YawsBug</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yawsbug/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yawsbug/</guid>
      <description>1 Failed to load setuid_drv (from &amp;ldquo;/httx/yaws/lib/yaws/priv/lib&amp;rdquo;) : &amp;ldquo;Driver compiled with incorrect version of erl_driver.h&amp;rdquo; 疑似原因： 1.It looks like you&amp;rsquo;ve compiled on one version of Erlang and are trying to run it with different version.（由A版本编译，由B版本运行） 2.安装Aerla</description>
    </item>
    
    <item>
      <title>YawsEhtml</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yawsehtml/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yawsehtml/</guid>
      <description>Data1 ={p, [{style, &amp;ldquo;display:none&amp;rdquo;},{id,&amp;ldquo;nowpage&amp;rdquo;}],[Page]}, {ehtml, Data1} {ehtml, {table, [], {tr, [], [{td, [{width, &amp;ldquo;30%&amp;quot;}], {table,[{border, &amp;ldquo;1&amp;rdquo;}, {bgcolor, beige},{bordercolor, black}], [{tr, [], {td, [], pb(&amp;ldquo;User: ~s&amp;rdquo;, [User])}}] } }, {td, [{align, right}], {img, [{src, &amp;ldquo;junk.jpg&amp;rdquo;}]} }] } } }.</description>
    </item>
    
    <item>
      <title>YawsSSIbindings</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yawsssibindings/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yawsssibindings/</guid>
      <description>test.yaws out( A ) -&amp;gt; {ehtml,[{ssi,&amp;ldquo;ssi_ex1.txt&amp;rdquo;,&amp;quot;@&amp;quot;,[{&amp;ldquo;a&amp;r</description>
    </item>
    
    <item>
      <title>Yaws页面传值</title>
      <link>https://yujian1018.github.io/book/pro/2.1-yaws/yaws%E9%A1%B5%E9%9D%A2%E4%BC%A0%E5%80%BC/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/2.1-yaws/yaws%E9%A1%B5%E9%9D%A2%E4%BC%A0%E5%80%BC/</guid>
      <description>Post传值 Post = yaws_api:parse_post( A ), Data =[ X|| {, X} &amp;lt;-Post ]。 query 可以接受问好 out(A) -&amp;gt; [{&amp;ldquo;name&amp;rdquo;,Name}|] = yaws_api:parse_query( A ), {bindings, [{&amp;ldquo;A&amp;rdquo;, Name}]}. Post和？都可以使用 case postvar(A,&amp;ldquo;lang&amp;rdquo;) of undefined -&amp;gt; &amp;ldquo;None&amp;rdquo;; {ok, Val} -&amp;gt; Val end yaws_api:queryvar( A, &amp;ldquo;lang&amp;rdquo; ) lang代表fo</description>
    </item>
    
    <item>
      <title>项目资料</title>
      <link>https://yujian1018.github.io/book/pro/readme/</link>
      <pubDate>Fri, 30 Aug 2019 15:13:01 +0800</pubDate>
      
      <guid>https://yujian1018.github.io/book/pro/readme/</guid>
      <description>project_data 项目资料</description>
    </item>
    
  </channel>
</rss>